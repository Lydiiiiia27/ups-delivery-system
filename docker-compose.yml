version: '3'
services:
  # PostgreSQL database for UPS
  ups-db:
    image: postgres:12-alpine3.15
    container_name: ups-db
    environment:
      POSTGRES_DB: ups
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ups-data:/var/lib/postgresql/data
    networks:
      - ups-network

  # World Simulator Database - renamed to mydb as expected by world-simulator
  mydb:
    image: postgres:12-alpine3.15
    container_name: mydb
    environment:
      POSTGRES_PASSWORD: abc123
      POSTGRES_USER: postgres
      POSTGRES_DB: worldSim
    networks:
      - world-network
    volumes:
      - world-data:/var/lib/postgresql/data

  # World Simulator
  world-simulator:
    build:
      context: ./ups-delivery-system/world-simulator
      dockerfile: Dockerfile
    container_name: world-simulator
    depends_on:
      - mydb
    command: bash -c "./wait-for-it.sh mydb:5432 --strict -- ./server 12345 23456 0"
    ports:
      - "12345:12345"
      - "23456:23456"
    networks:
      - world-network

  # UPS application
  ups-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ups-app
    depends_on:
      - ups-db
      - world-simulator
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://ups-db:5432/ups
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
      - UPS_WORLD_HOST=world-simulator
      - UPS_WORLD_PORT=12345
      - UPS_INIT_TRUCKS=5
      - UPS_WORLD_SIM_SPEED=100
      - UPS_WORLD_CREATE_NEW=true
      - AMAZON_SERVICE_URL=${AMAZON_SERVICE_URL:-http://amazon:8080}
    ports:
      - "8080:8080"
    networks:
      - ups-network
      - world-network
    command: >
      sh -c "
        ./wait-for-it.sh ups-db:5432 --timeout=30 --strict -- 
        ./wait-for-it.sh world-simulator:12345 --timeout=30 --strict -- 
        java -jar app.jar --spring.profiles.active=production
      "
    restart: unless-stopped

networks:
  ups-network:
    driver: bridge
  world-network:
    driver: bridge

volumes:
  ups-data:
  world-data: